/*Copyright (c) 2016-2017 vcstest2.com All Rights Reserved.
 This software is the confidential and proprietary information of vcstest2.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with vcstest2.com*/
package com.testmvnbuild.dbscenarios;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * AllExternalTypes generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ALL EXTERNAL TYPES`")
@IdClass(AllExternalTypesId.class)
public class AllExternalTypes implements Serializable {

    private Short tinyIntCol;
    private Short smallIntCol;
    private Integer mediumIntCol;
    private Integer intCol;
    private BigInteger bigintCol;
    private Integer decimalCol;
    private Double floatCol;
    private BigDecimal doubleCol;
    private Boolean bitCol;
    private Boolean booleanCol;
    private BigInteger serialCol;
    private Date dateCol;
    @Type(type = "DateTime")
    private LocalDateTime datetimeCol;
    private Date timestampCol;
    private Date timeCol;
    private Character charCol;
    private String varcharCol;
    private String tinytextCol;
    private String textCol;
    private String mediumTextCol;
    private String longtextCol;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] blobCol;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] longblobCol;

    @Id
    @Column(name = "`TINY INT COL`", nullable = false, scale = 0, precision = 3)
    public Short getTinyIntCol() {
        return this.tinyIntCol;
    }

    public void setTinyIntCol(Short tinyIntCol) {
        this.tinyIntCol = tinyIntCol;
    }

    @Id
    @Column(name = "`SMALL INT COL`", nullable = false, scale = 0, precision = 5)
    public Short getSmallIntCol() {
        return this.smallIntCol;
    }

    public void setSmallIntCol(Short smallIntCol) {
        this.smallIntCol = smallIntCol;
    }

    @Id
    @Column(name = "`MEDIUM INT COL`", nullable = false, scale = 0, precision = 7)
    public Integer getMediumIntCol() {
        return this.mediumIntCol;
    }

    public void setMediumIntCol(Integer mediumIntCol) {
        this.mediumIntCol = mediumIntCol;
    }

    @Id
    @Column(name = "`INT COL`", nullable = false, scale = 0, precision = 10)
    public Integer getIntCol() {
        return this.intCol;
    }

    public void setIntCol(Integer intCol) {
        this.intCol = intCol;
    }

    @Id
    @Column(name = "`BIGINT COL`", nullable = false, scale = 0, precision = 19)
    public BigInteger getBigintCol() {
        return this.bigintCol;
    }

    public void setBigintCol(BigInteger bigintCol) {
        this.bigintCol = bigintCol;
    }

    @Id
    @Column(name = "`DECIMAL COL`", nullable = false, scale = 0, precision = 10)
    public Integer getDecimalCol() {
        return this.decimalCol;
    }

    public void setDecimalCol(Integer decimalCol) {
        this.decimalCol = decimalCol;
    }

    @Id
    @Column(name = "`FLOAT COL`", nullable = false, scale = 4, precision = 12)
    public Double getFloatCol() {
        return this.floatCol;
    }

    public void setFloatCol(Double floatCol) {
        this.floatCol = floatCol;
    }

    @Id
    @Column(name = "`DOUBLE COL`", nullable = false, scale = 9, precision = 22)
    public BigDecimal getDoubleCol() {
        return this.doubleCol;
    }

    public void setDoubleCol(BigDecimal doubleCol) {
        this.doubleCol = doubleCol;
    }

    @Id
    @Column(name = "`BIT COL`", nullable = false)
    public Boolean isBitCol() {
        return this.bitCol;
    }

    public void setBitCol(Boolean bitCol) {
        this.bitCol = bitCol;
    }

    @Id
    @Column(name = "`BOOLEAN COL`", nullable = false)
    public Boolean isBooleanCol() {
        return this.booleanCol;
    }

    public void setBooleanCol(Boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    @Id
    @Column(name = "`SERIAL COL`", nullable = false, scale = 0, precision = 20)
    public BigInteger getSerialCol() {
        return this.serialCol;
    }

    public void setSerialCol(BigInteger serialCol) {
        this.serialCol = serialCol;
    }

    @Id
    @Temporal(TemporalType.DATE)
    @Column(name = "`DATE COL`", nullable = false)
    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @Id
    @Column(name = "`DATETIME COL`", nullable = false)
    public LocalDateTime getDatetimeCol() {
        return this.datetimeCol;
    }

    public void setDatetimeCol(LocalDateTime datetimeCol) {
        this.datetimeCol = datetimeCol;
    }

    @Id
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`TIMESTAMP COL`", nullable = false)
    public Date getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(Date timestampCol) {
        this.timestampCol = timestampCol;
    }

    @Id
    @Temporal(TemporalType.TIME)
    @Column(name = "`TIME COL`", nullable = false)
    public Date getTimeCol() {
        return this.timeCol;
    }

    public void setTimeCol(Date timeCol) {
        this.timeCol = timeCol;
    }

    @Id
    @Column(name = "`CHAR COL`", nullable = false, length = 1)
    public Character getCharCol() {
        return this.charCol;
    }

    public void setCharCol(Character charCol) {
        this.charCol = charCol;
    }

    @Id
    @Column(name = "`VARCHAR COL`", nullable = true, length = 255)
    public String getVarcharCol() {
        return this.varcharCol;
    }

    public void setVarcharCol(String varcharCol) {
        this.varcharCol = varcharCol;
    }

    @Id
    @Column(name = "`TINYTEXT COL`", nullable = true, length = 255)
    public String getTinytextCol() {
        return this.tinytextCol;
    }

    public void setTinytextCol(String tinytextCol) {
        this.tinytextCol = tinytextCol;
    }

    @Id
    @Column(name = "`TEXT COL`", nullable = false, length = 65535)
    public String getTextCol() {
        return this.textCol;
    }

    public void setTextCol(String textCol) {
        this.textCol = textCol;
    }

    @Id
    @Column(name = "`MEDIUM TEXT COL`", nullable = false, length = 16777215)
    public String getMediumTextCol() {
        return this.mediumTextCol;
    }

    public void setMediumTextCol(String mediumTextCol) {
        this.mediumTextCol = mediumTextCol;
    }

    @Id
    @Column(name = "`LONGTEXT COL`", nullable = false, length = 2147483647)
    public String getLongtextCol() {
        return this.longtextCol;
    }

    public void setLongtextCol(String longtextCol) {
        this.longtextCol = longtextCol;
    }

    @Id
    @Column(name = "`BLOB COL`", nullable = true)
    public byte[] getBlobCol() {
        return this.blobCol;
    }

    public void setBlobCol(byte[] blobCol) {
        this.blobCol = blobCol;
    }

    @Id
    @Column(name = "`LONGBLOB COL`", nullable = true)
    public byte[] getLongblobCol() {
        return this.longblobCol;
    }

    public void setLongblobCol(byte[] longblobCol) {
        this.longblobCol = longblobCol;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AllExternalTypes)) return false;
        final AllExternalTypes allExternalTypes = (AllExternalTypes) o;
        return Objects.equals(getTinyIntCol(), allExternalTypes.getTinyIntCol()) &&
                Objects.equals(getSmallIntCol(), allExternalTypes.getSmallIntCol()) &&
                Objects.equals(getMediumIntCol(), allExternalTypes.getMediumIntCol()) &&
                Objects.equals(getIntCol(), allExternalTypes.getIntCol()) &&
                Objects.equals(getBigintCol(), allExternalTypes.getBigintCol()) &&
                Objects.equals(getDecimalCol(), allExternalTypes.getDecimalCol()) &&
                Objects.equals(getFloatCol(), allExternalTypes.getFloatCol()) &&
                Objects.equals(getDoubleCol(), allExternalTypes.getDoubleCol()) &&
                Objects.equals(isBitCol(), allExternalTypes.isBitCol()) &&
                Objects.equals(isBooleanCol(), allExternalTypes.isBooleanCol()) &&
                Objects.equals(getSerialCol(), allExternalTypes.getSerialCol()) &&
                Objects.equals(getDateCol(), allExternalTypes.getDateCol()) &&
                Objects.equals(getDatetimeCol(), allExternalTypes.getDatetimeCol()) &&
                Objects.equals(getTimestampCol(), allExternalTypes.getTimestampCol()) &&
                Objects.equals(getTimeCol(), allExternalTypes.getTimeCol()) &&
                Objects.equals(getCharCol(), allExternalTypes.getCharCol()) &&
                Objects.equals(getVarcharCol(), allExternalTypes.getVarcharCol()) &&
                Objects.equals(getTinytextCol(), allExternalTypes.getTinytextCol()) &&
                Objects.equals(getTextCol(), allExternalTypes.getTextCol()) &&
                Objects.equals(getMediumTextCol(), allExternalTypes.getMediumTextCol()) &&
                Objects.equals(getLongtextCol(), allExternalTypes.getLongtextCol()) &&
                Objects.equals(getBlobCol(), allExternalTypes.getBlobCol()) &&
                Objects.equals(getLongblobCol(), allExternalTypes.getLongblobCol());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getTinyIntCol(),
                getSmallIntCol(),
                getMediumIntCol(),
                getIntCol(),
                getBigintCol(),
                getDecimalCol(),
                getFloatCol(),
                getDoubleCol(),
                isBitCol(),
                isBooleanCol(),
                getSerialCol(),
                getDateCol(),
                getDatetimeCol(),
                getTimestampCol(),
                getTimeCol(),
                getCharCol(),
                getVarcharCol(),
                getTinytextCol(),
                getTextCol(),
                getMediumTextCol(),
                getLongtextCol(),
                getBlobCol(),
                getLongblobCol());
    }
}

