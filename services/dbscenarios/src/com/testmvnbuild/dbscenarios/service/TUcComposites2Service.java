/*Copyright (c) 2016-2017 vcstest2.com All Rights Reserved.
 This software is the confidential and proprietary information of vcstest2.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with vcstest2.com*/
package com.testmvnbuild.dbscenarios.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testmvnbuild.dbscenarios.TUcComposites2;
import com.testmvnbuild.dbscenarios.TUcComposites2Id;

/**
 * Service object for domain model class {@link TUcComposites2}.
 */
public interface TUcComposites2Service {

    /**
     * Creates a new TUcComposites2. It does cascade insert for all the children in a single transaction.
     *
     * This method overrides the input field values using Server side or database managed properties defined on TUcComposites2 if any.
     *
     * @param tucComposites2 Details of the TUcComposites2 to be created; value cannot be null.
     * @return The newly created TUcComposites2.
     */
	TUcComposites2 create(TUcComposites2 tucComposites2);


	/**
	 * Returns TUcComposites2 by given id if exists.
	 *
	 * @param tuccomposites2Id The id of the TUcComposites2 to get; value cannot be null.
	 * @return TUcComposites2 associated with the given tuccomposites2Id.
     * @throws EntityNotFoundException If no TUcComposites2 is found.
	 */
	TUcComposites2 getById(TUcComposites2Id tuccomposites2Id) throws EntityNotFoundException;

    /**
	 * Find and return the TUcComposites2 by given id if exists, returns null otherwise.
	 *
	 * @param tuccomposites2Id The id of the TUcComposites2 to get; value cannot be null.
	 * @return TUcComposites2 associated with the given tuccomposites2Id.
	 */
	TUcComposites2 findById(TUcComposites2Id tuccomposites2Id);


	/**
	 * Updates the details of an existing TUcComposites2. It replaces all fields of the existing TUcComposites2 with the given tucComposites2.
	 *
     * This method overrides the input field values using Server side or database managed properties defined on TUcComposites2 if any.
     *
	 * @param tucComposites2 The details of the TUcComposites2 to be updated; value cannot be null.
	 * @return The updated TUcComposites2.
	 * @throws EntityNotFoundException if no TUcComposites2 is found with given input.
	 */
	TUcComposites2 update(TUcComposites2 tucComposites2) throws EntityNotFoundException;

    /**
	 * Deletes an existing TUcComposites2 with the given id.
	 *
	 * @param tuccomposites2Id The id of the TUcComposites2 to be deleted; value cannot be null.
	 * @return The deleted TUcComposites2.
	 * @throws EntityNotFoundException if no TUcComposites2 found with the given id.
	 */
	TUcComposites2 delete(TUcComposites2Id tuccomposites2Id) throws EntityNotFoundException;

	/**
	 * Find all TUcComposites2s matching the given QueryFilter(s).
     * All the QueryFilter(s) are ANDed to filter the results.
     * This method returns Paginated results.
	 *
     * @deprecated Use {@link #findAll(String, Pageable)} instead.
	 *
     * @param queryFilters Array of queryFilters to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TUcComposites2s.
     *
     * @see QueryFilter
     * @see Pageable
     * @see Page
	 */
    @Deprecated
	Page<TUcComposites2> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Find all TUcComposites2s matching the given input query. This method returns Paginated results.
     * Note: Go through the documentation for <u>query</u> syntax.
	 *
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null returns all matching records.
     * @return Paginated list of matching TUcComposites2s.
     *
     * @see Pageable
     * @see Page
	 */
    Page<TUcComposites2> findAll(String query, Pageable pageable);

    /**
	 * Exports all TUcComposites2s matching the given input query to the given exportType format.
     * Note: Go through the documentation for <u>query</u> syntax.
	 *
     * @param exportType The format in which to export the data; value cannot be null.
     * @param query The query to filter the results; No filters applied if the input is null/empty.
     * @param pageable Details of the pagination information along with the sorting options. If null exports all matching records.
     * @return The Downloadable file in given export type.
     *
     * @see Pageable
     * @see ExportType
     * @see Downloadable
	 */
    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the TUcComposites2s in the repository with matching query.
     * Note: Go through the documentation for <u>query</u> syntax.
     *
     * @param query query to filter results. No filters applied if the input is null/empty.
	 * @return The count of the TUcComposites2.
	 */
	long count(String query);


}

